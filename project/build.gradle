plugins {
    id 'java'
    id 'jacoco'
    id 'application'
    id 'org.ajoberstar.git-publish' version '4.2.0'
    id 'org.unbroken-dome.test-sets' version '4.0.0'//for system tests
    //id 'pmd'
    id 'com.github.spotbugs' version '5.0.5'
    //id 'org.jbake.site' version '5.5.0'
   //id ("org.xbib.gradle.plugin.jflex") version "1.7.0"

}

jar {
    archiveFileName = 'PNE.jar'
    manifest {
        attributes 'Main-Class': 'edu.odu.cs.cs350.Extractor'
    }
}

java {
    sourceCompatibility = JavaVersion.toVersion(11)
    targetCompatibility = JavaVersion.toVersion(11)
}


repositories {
    mavenCentral()
    ivy {
      url 'https://www.cs.odu.edu/~zeil/ivyrepo'
     }
}



dependencies {
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.0'
    testImplementation 'org.hamcrest:hamcrest-library:2.2'
    testImplementation 'org.jmockit:jmockit:1.49'
    implementation 'edu.odu.cs.extract:extract-wordlists:4.2'
    implementation 'nz.ac.waikato.cms.weka:weka-stable:3.8.6'
    spotbugsPlugins("com.h3xstream.findsecbugs:findsecbugs-plugin:1.12.0")



    //testImplementation "org.junit.jupiter:junit-jupiter-api:5.6.1"//for system tests
    //testRuntime "org.junit.jupiter:junit-jupiter-engine:5.6.1"//for system tests
}

//~~~~~~~~~~~~~~~~~~~~~~~~~~System Test~~~~~~~~~~~~~~~~~~~~~~~~~~~~
testSets { systest }


systest.mustRunAfter test

systest {
    ignoreFailures = true
}


//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 

spotbugs{
    toolVersion = "4.6.0"
    ignoreFailures = true
    effort = "max"
    reportLevel = "high"
    
    [spotbugsMain, spotbugsTest].each { task ->
        task.configure {
            reports {
                html {
                    enabled = true
                    stylesheet = 'fancy-hist.xsl'
                    destination = file("build/reports/spotbugs/index.html")
                }
            }
        }
    }
}

jacoco{
    toolVersion = "0.8.7"
    reportsDir = file("build/reports/jacoco")
}

jacocoTestReport {
    reports {
        xml.enabled false
        html.enabled true
    }
}

tasks.withType(Test) {
    useJUnitPlatform()
    ignoreFailures = true
    testLogging {
        events "passed", "skipped", "failed"
        }
}

application { //Allows  ./gradlew run --args=path-to-test-data
    mainClass = 'edu.odu.cs.Extractor'
}

task copyHTML (type: Copy, dependsOn: ['build']) {
    from 'src/main/html'
    into 'build/reports'
}

task reports (type: Copy, dependsOn: ['javadoc', 'copyHTML', 'systest', 'spotbugsMain', 'jacocoTestReport']) {
    from 'build/docs'
    into 'build/reports'
}

task deployReports (type: Delete, dependsOn: ['gitPublishPush', 'reports', 'spotbugsMain']) {
    group = "Reporting"
    description  'Commit and push website changes to GitHub'
}

gitPublishCopy.dependsOn reports

gitPublish {
    repoUri = 'git@github.com:Old-Dominion-Univ-CS350/cs350-project-s24-kdoua001.git'
    branch = 'gh-pages'
  
    fetchDepth = null

    contents {
        from 'build/reports'
    }

    commitMessage = 'Publishing website' // defaults to 'Generated by gradle-git-publish'
    
    sign = false
}
