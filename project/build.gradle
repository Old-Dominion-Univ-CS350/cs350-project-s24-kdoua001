plugins {
    id 'java'
    id 'jacoco'
    id 'application'
    id 'org.ajoberstar.git-publish' version '4.2.0'
   // id 'pmd'
   // id 'com.github.spotbugs' version '5.0.5'
   // id 'org.jbake.site' version '5.5.0'
   //id ("org.xbib.gradle.plugin.jflex") version "1.7.0"

}

jar {
    archiveFileName = 'PNE.jar'
    manifest {
        attributes 'Main-Class': 'edu.odu.cs.cs350.Extractor'
    }
}

java {
    sourceCompatibility = JavaVersion.toVersion(11)
    targetCompatibility = JavaVersion.toVersion(11)
}

repositories {
    mavenCentral()
    ivy {
      url 'https://www.cs.odu.edu/~zeil/ivyrepo'
     }
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.0'
    testImplementation 'org.hamcrest:hamcrest-library:2.2'
    testImplementation 'org.jmockit:jmockit:1.49'
   // implementation 'edu.odu.cs.extract:extract-wordlists:4.2'
    implementation 'nz.ac.waikato.cms.weka:weka-stable:3.8.6'
}

tasks.withType(Test) {
    useJUnitPlatform()
    ignoreFailures = true
    testLogging {
        events "passed", "skipped", "failed"
        }
}

application { //Allows  ./gradlew run --args=path-to-test-data
    mainClass = 'edu.odu.cs.Extractor'
}

task copyHTML (type: Copy, dependsOn: ['build']) {
    from 'src/main/html'
    into 'build/reports'
}

task reports (type: Copy, dependsOn: ['javadoc', 'copyHTML']) {
    from 'build/docs'
    into 'build/reports'
}

task deployReports (type: Delete, dependsOn: ['gitPublishPush', 'reports']) {
    group = "Reporting"
    description  'Commit and push website changes to GitHub'
}

gitPublishCopy.dependsOn reports

gitPublish {
    // where to publish to (repo must exist)
    repoUri = 'git@github.com:Old-Dominion-Univ-CS350/cs350-project-s24-kdoua001.git'
    // branch will be created if it doesn't exist
    branch = 'gh-pages'
  
    // if set, a shallow clone will be performed instead of pulling all history
    fetchDepth = null

    // generally, you don't need to touch this
    //repoDir = file("$buildDir/somewhereelse") // defaults to $buildDir/gitPublish

    // what to publish, this is a standard CopySpec
    contents {
        from 'build/reports'
    }

    // message used when committing changes
    commitMessage = 'Publishing website' // defaults to 'Generated by gradle-git-publish'
    
    // for signing commits, omit to use the default from your gitconfig
    sign = false
}
